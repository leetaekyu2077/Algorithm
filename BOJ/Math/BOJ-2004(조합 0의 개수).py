from sys import stdin

n, m = map(int, stdin.readline().split())

# n!의 소인수분해에서 k의 갯수를 구하는 함수
'''
n 이하의 수 중에서 k, k^2, k^3 ... 의 배수를 카운트하여 더하면, 결과적으로 n!의 포함된 k의 갯수를 모두 카운트하게 됨.

예를 들어, 10!의 소인수분해에 포함된 2의 갯수를 구한다고 하면,
2의 배수를 세면 2, 4, 6, 8, 10 -> 5개. 이때 4 = 2^2, 8 = 2^3 처럼 2가 여러 번 곱해진 수에 포함된 2는 모두 고려되지 못함.
그 다음으로 4의 배수를 세면 4, 8 -> 2개. 이때는 4에 포함되었던 2까지 커버됨. 아직 8은 하나 남았음.
마지막으로 8의 배수를 세면 8 -> 1개. 8에 포함되었던 2까지 모두 커버됨.

10!은 1*2*3*...*10 이므로, 결과적으론 1~10 에 인수로 들어가 있는 2가 모두 합쳐짐. 따라서 1~10에 포함된 2를 모두 세면 됨
결과적으로 10!의 소인수분해에 포함된 2는 5 + 2 + 1 = 8
'''

def count_k(n, k):
    result = 0
    temp = k
    
    while temp <= n:
        result += n // temp
        temp *= k
    
    return result
    
'''
끝에 붙은 0의 갯수는 10의 몇 거듭제곱이 곱해져 있는지, 즉 2*5가 몇 번 곱해져 있는지를 세면 됨.
(2*5) 형태가 이뤄져야 하므로, 2와 5 중 둘 중에 더 적은 것의 갯수만큼 2*5가 만들어지게 됨.
'''
two = count_k(n, 2) - count_k(m, 2) - count_k(n-m, 2)
five = count_k(n, 5) - count_k(m, 5) - count_k(n-m, 5)

print(min(two, five))